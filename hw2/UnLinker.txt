首先遇到这个问题我们的第一个想法就是可以利用字符串的匹配来解决这个问题，同时我们可以利用jflex来自动生成
Java文件。如果利用第一种方法，利用分治的策略会显得更加简单一点，我们的想法是先查找当前字符串的前缀位置
（也就是www. http:// http://www.中位置最前的那个位置），接下来按照相同的方法查找当前字符串的后缀位置
（同理，也就是.com .org .edu .info .tv中最后的那个位置），这么做是为了匹配最长的字符串，接下来我们利用
字符串的查找功能来判断中间部分是否符合一个域名的命名规范，如果符合，直接将这段字符串替换成相应的OMIT，结束；
如果不符合，那么就将这段字符串从不符合规范的地方一分为二，递归的调用这个函数，直到完成。
值得强调的是，一个递归应当有起始状态（整个字符串），递归方法（见上）和终止条件，终止条件是一旦子串中找不到
合法的前缀或者后缀，停止调用递归。

