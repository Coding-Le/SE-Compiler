
package parser;

public class OppTable {
	
	/*
	 * Here the priorities represent as:
	 * 1: <
	 * 2: =
	 * 3: >
	 * 4: accept
	 * 
	 * 10:SyntacticException （表达式中的语法错误）
	 * 11:MissingOperatorException （缺少运算符）
	 * 12:MissingOperandException （缺少运算量）
	 * 13:MissingLeftParenthesisException （缺少左括号）
	 * 14:MissingRightParenthesisException （缺少右括号）
	 * 15:FunctionCallException （预定义函数调用的语法形式错误）
	 * 16:TrinaryOperationException （三元运算的语法形式错误）
	 * 17:TypeMismatchedException （类型不匹配错误）
	 */
	
	public static int Table[][] = {
		{10,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 16,  1, 10, 13,  1,  1,  1,  1 },
		{ 3, 11,  3,  3,  3,  3,  3, 11, 17,  3,  3, 17,  3,  3,  3,  3,  3,  3,  3,  3, 11,  3,  3, 11, 11, 11, 11 },
		{ 3,  1,  3,  3,  1,  1,  1,  1, 17,  3,  3, 17,  3,  3,  3,  3,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  3,  3,  1,  1,  1,  1, 17,  3,  3, 17,  3,  3,  3,  3,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  3,  3,  3,  3,  1,  1, 17,  3,  3, 17,  3,  3,  3,  3,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  3,  3,  3,  3,  1,  1, 17,  3,  3, 17,  3,  3,  3,  3,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  3,  3,  3,  3,  1,  1, 17,  3,  3, 17,  3,  3,  3,  3,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  3,  3,  3,  3,  3,  1, 17,  3,  3, 12,  3,  3,  3,  3,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3, 11, 17, 17, 17, 17, 17, 11, 11,  3,  3, 17, 17, 17, 17, 17,  3,  3,  3,  3, 11,  3,  3, 11, 11, 11, 11 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  3,  1,  1,  1,  1,  1,  1,  1,  1,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  3,  3,  1,  1,  1,  1,  1,  1,  1,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  3,  3,  1,  1,  1,  1,  1,  1,  1,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 12, 12, 12, 12,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 12, 12, 12, 12,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 12, 12, 12, 12,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 12, 12, 12, 12,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  3,  3,  3,  3,  1,  3,  3,  1,  1,  1,  1 },
		{16,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  1, 16, 16,  1,  1,  1,  1 },
		{ 3,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  3,  1,  3,  3,  1,  1,  1,  1 },
		{14,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 16,  1,  2,  2,  1,  1,  1,  1 },
		{15,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 17,  1,  2,  2,  1,  1,  1,  1 },
		{ 3, 11,  3,  3,  3,  3,  3, 12, 12,  3,  3, 11,  3,  3,  3,  3,  3,  3,  3,  3, 11,  3,  3, 11, 11, 11, 11 },
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  2, 15, 15, 15, 15, 15, 15 },
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  2, 15, 15, 15, 15, 15, 15 },
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  2, 15, 15, 15, 15, 15, 15 },
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  2, 15, 15, 15, 15, 15, 15 }, 
	};
	
}