这个函数主要有两个部分组成，一个部分是main函数，另外一个部分是InfixToPostfix部分
对于InfixToPostfix部分，有以下转换原则：

1.当读到一个非操作符(括号也看成操作符)时，立即将它放到输出中，如果是操作符，先进行判断，如果此时栈顶操作符优先性大于或等于此操作符，
弹出栈顶操作符直到栈为空或者栈顶操作符优先性小于此操作符为止。

2.如果遇到一个右括号，如果栈顶元素不为左括号，那么就将栈元素弹出，将符号输出。直到遇到一个对应的左括号，将这个左括号弹出，进入下一次循环。

3.左括号在压入栈时可认为优先级最高，在栈顶时可认为优先级最低，除非右括号，否则不弹出。

4.如果读到输入的末尾，将栈元素弹出直到该栈变成空栈，将符号写到输出中。

整个部分的代码结构就是这样，这里可能需要用到一个辅助函数，优先级函数，我们规定^的优先级最高，其次是* /，最后是加减，至于括号单独判断，左括号
直接压入栈，除非有右括号，否则不出栈。


对于main部分，我们可以用一个while函数等待用户的输入，一旦用户输入，我们利用Scanner读取字符串，调用InfixToPostfix函数后输出结果到屏幕上。